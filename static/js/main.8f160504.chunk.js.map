{"version":3,"sources":["components/HomePage.js","components/AboutPage.js","components/common/Header.js","api/apiUtils.js","api/courseApi.js","components/CourseList.js","components/CoursesPage.js","components/NotFoundPage.js","components/common/TextInput.js","components/CourseForm.js","components/ManageCoursePage.js","components/App.js","index.js"],"names":["HomePage","className","to","AboutPage","React","Component","Header","activeStyle","color","exact","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","baseUrl","process","REACT_APP_API_URL","CourseList","props","courses","map","course","key","id","slug","title","authorId","category","CoursesPage","useState","setCourses","useEffect","fetch","then","catch","_courses","NotFoundPage","TextInput","wrapperClass","length","htmlFor","label","type","onChange","name","value","defaultProps","CourseForm","onSubmit","errors","ManageCoursePage","setErrors","setCourse","match","params","courseApi","_course","target","event","preventDefault","_errors","Object","keys","formIsValid","method","headers","body","JSON","stringify","parseInt","history","push","toast","success","App","autoClose","hideProgressBar","path","component","from","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f160504.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction HomePage() {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Pluralsight Administration</h1>\n      <p>React, Flux, and React Router for ultra-responsive web apps.</p>\n      <Link to=\"about\" className=\"btn btn-primary\">\n        About\n      </Link>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from \"react\";\n\nclass AboutPage extends React.Component {\n  render() {\n    return (\n      <>\n        <h2>About</h2>\n        <p>This app uses React.</p>\n      </>\n    );\n  }\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nfunction Header() {\n  const activeStyle = { color: \"orange\" };\n  return (\n    <nav>\n      <NavLink activeStyle={activeStyle} exact to=\"/\">\n        Home\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/courses\">\n        Courses\n      </NavLink>\n      {\" | \"}\n      <NavLink activeStyle={activeStyle} to=\"/about\">\n        About\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default Header;\n","export async function handleResponse(response) {\n  if (response.ok) return response.json();\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\nexport function handleError(error) {\n  // eslint-disable-next-line no-console\n  console.error(\"API call failed. \" + error);\n  throw error;\n}\n","import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/courses/\";\n\nexport function getCourses() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function getCourseBySlug(slug) {\n  return fetch(baseUrl + \"?slug=\" + slug)\n    .then(response => {\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\n      return response.json().then(courses => {\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n        return courses[0]; // should only find one course for a given slug, so return it.\n      });\n    })\n    .catch(handleError);\n}\n\nexport function saveCourse(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteCourse(courseId) {\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction CourseList(props) {\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Title</th>\n          <th>Author ID</th>\n          <th>Category</th>\n        </tr>\n      </thead>\n      <tbody>\n        {props.courses.map(course => {\n          return (\n            <tr key={course.id}>\n              <td>\n                <Link to={\"/course/\" + course.slug}>{course.title}</Link>\n              </td>\n              <td>{course.authorId}</td>\n              <td>{course.category}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nCourseList.propTypes = {\n  courses: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      authorId: PropTypes.number.isRequired,\n      category: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default CourseList;\n","import React, { useState, useEffect } from \"react\";\nimport { getCourses } from \"../api/courseApi\";\nimport CourseList from \"./CourseList\";\nimport { Link } from \"react-router-dom\";\n\nfunction CoursesPage() {\n  const [courses, setCourses] = useState([]);\n\n  useEffect(() => {\n    getCourses().then(_courses => setCourses(_courses));\n  }, []);\n\n  return (\n    <>\n      <h2>Courses</h2>\n      <Link className=\"btn btn-primary\" to=\"/course\">\n        Add Course\n      </Link>\n      <CourseList courses={courses} />\n    </>\n  );\n}\n\nexport default CoursesPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NotFoundPage() {\n  return (\n    <div>\n      <h2>Page Not Found</h2>\n      <p>\n        <Link to=\"/\">Back to Home</Link>\n      </p>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction TextInput(props) {\n  let wrapperClass = \"form-group\";\n  if (props.error.length > 0) {\n    wrapperClass += \" has-error\";\n  }\n\n  return (\n    <div className={wrapperClass}>\n      <label htmlFor={props.id}>{props.label}</label>\n      <div className=\"field\">\n        <input\n          id={props.id}\n          type=\"text\"\n          onChange={props.onChange}\n          name={props.name}\n          className=\"form-control\"\n          value={props.value}\n        />\n      </div>\n      {props.error && <div className=\"alert alert-danger\">{props.error}</div>}\n    </div>\n  );\n}\n\nTextInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  error: PropTypes.string\n};\n\nTextInput.defaultProps = {\n  error: \"\"\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport TextInput from \"./common/TextInput\";\nimport PropTypes from \"prop-types\";\n\nfunction CourseForm(props) {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <TextInput\n        id=\"title\"\n        label=\"Title\"\n        onChange={props.onChange}\n        name=\"title\"\n        value={props.course.title}\n        error={props.errors.title}\n      />\n\n      <div className=\"form-group\">\n        <label htmlFor=\"author\">Author</label>\n        <div className=\"field\">\n          <select\n            id=\"author\"\n            name=\"authorId\"\n            onChange={props.onChange}\n            value={props.course.authorId || \"\"}\n            className=\"form-control\"\n          >\n            <option value=\"\" />\n            <option value=\"1\">Cory House</option>\n            <option value=\"2\">Scott Allen</option>\n          </select>\n        </div>\n        {props.errors.authorId && (\n          <div className=\"alert alert-danger\">{props.errors.authorId}</div>\n        )}\n      </div>\n\n      <TextInput\n        id=\"category\"\n        label=\"Category\"\n        name=\"category\"\n        onChange={props.onChange}\n        value={props.course.category}\n        error={props.errors.category}\n      />\n\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\n    </form>\n  );\n}\n\nCourseForm.propTypes = {\n  course: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nexport default CourseForm;\n","import React, { useState, useEffect } from \"react\";\nimport CourseForm from \"./CourseForm\";\nimport * as courseApi from \"../api/courseApi\";\nimport { toast } from \"react-toastify\";\n\nconst ManageCoursePage = props => {\n  const [errors, setErrors] = useState({});\n  const [course, setCourse] = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  });\n\n  useEffect(() => {\n    const slug = props.match.params.slug; // from the path `/courses/:slug`\n    if (slug) {\n      courseApi.getCourseBySlug(slug).then(_course => setCourse(_course));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange({ target }) {\n    setCourse({\n      ...course,\n      [target.name]: target.value\n    });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"Author ID is required\";\n    if (!course.category) _errors.category = \"Category is required\";\n\n    setErrors(_errors);\n    // Form is valid if the errors object has no properties\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!formIsValid()) return;\n    courseApi.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success(\"Course saved.\");\n    });\n  }\n\n  return (\n    <>\n      <h2>Manage Course</h2>\n      <CourseForm\n        errors={errors}\n        course={course}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default ManageCoursePage;\n","import React from \"react\";\nimport HomePage from \"./HomePage\";\nimport AboutPage from \"./AboutPage\";\nimport Header from \"./common/Header\";\nimport CoursesPage from \"./CoursesPage\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport ManageCoursePage from \"./ManageCoursePage\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <ToastContainer autoClose={3000} hideProgressBar />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/courses\" component={CoursesPage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route path=\"/course/:slug\" component={ManageCoursePage} />\n        <Route path=\"/course\" component={ManageCoursePage} />\n        <Redirect from=\"/about-page\" to=\"about\" />\n        <Route component={NotFoundPage} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}